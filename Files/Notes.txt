файловая система — это пространство, выделяемое операционной системой для хранения и доступа к информации на любом физическом носителе (жесткий диск, SSD, карта памяти и другие).
Всё, что знает программа — это имя файла, его размер и атрибуты. Эти данные она получает от драйвера файловой системы. Именно файловая система устанавливает, где и как будет записан файл на физическом носителе.

Драйвер файловой системы предоставляет интерфейс обмена данными между железом и ОС. С помощью него получаем информацию о файле

Типы файловых систем:
Для носителей с произвольным доступом (например, жёсткий диск): FAT32, NTFS, HPFS, ext2 и другие. 
Для flash-памяти: YAFFS, ExtremeFFS, exFAT.
Для носителей с последовательным доступом (например, магнитные ленты): QIC и другие.
Для оптических носителей CD и DVD: ISO9660, HFS, UDF и другие.

К примеру,  система FAT32 позволяет сохранять файлы максимального объема 4 ГБ, таким образом, если вы хотите сохранить на flash-память большой файл, носитель придется переформатировать в систему NTFS.


Для представления диска в пространстве имен System.IO имеется класс DriveInfo.
Он имеет статический метод GetDrives(), возвращающий имена всех логических дисков компьютера.
AvailableFreeSpace: указывает на объем доступного свободного места на диске в байтах;
DriveFormat: получает имя файловой системы;
DriveType: представляет тип диска;
IsReady: готов ли диск (например, DVD-диск может быть не вставлен в дисковод);
Name: получает имя диска;
TotalFreeSpace: получает общий объем свободного места на диске в байтах;
TotalSize: общий размер диска в байтах;
VolumeLabel: получает или устанавливает метку тома.

Класс Directory предоставляет ряд статических методов для управления каталогами.  
Наиболее используемые:
CreateDirectory(path): создает каталог по указанному пути;
Delete(path): удаляет каталог по указанному пути;
Exists(path): определяет, существует ли каталог по указанному пути; 
GetDirectories(path): получает список каталогов в каталоге path;
GetFiles(path): получает список файлов в каталоге path;
Move(source, destination): перемещает каталог;
GetParent(path): получение родительского каталога.

Класс DirectoryInfo по функционалу во многом похож на Directory и позволяет нам создавать, удалять, перемещать и производить другие операции с каталогами. 
Наиболее используемые:
Create(): создает каталог;
CreateSubdirectory(path): создает подкаталог по указанному пути path;
Delete(): удаляет каталог;
Свойство Exists: определяет, существует ли каталог;
GetDirectories(): получает список каталогов;
GetFiles(): получает список файлов;
MoveTo(destDirName): перемещает каталог;
Свойство Parent: получение родительского каталога;
Свойство Root: получение корневого каталога.

